---

- become: True
  block: 

  # Build Slurm from source
  - tags: ['never', 'build-slurm']
    when: '"build-slurm" in ansible_run_tags'
    block:
    - name: Install packages for the build
      package:
        name: "{{ item }}"
        state: installed
      with_items: "{{ slurm_build_dependencies }}"

    - name: Download the source tarball
      get_url:
        url: "{{ slurm_build_download_url }}"
        dest: "/var/tmp/{{ slurm_build_download_url|basename }}"

    - name: Build the rpms
      shell: "rpmbuild -ta /var/tmp/{{ slurm_build_download_url|basename }}"


  # Install and configure Munge for host authentication
  - name: Ensure the munge key is set
    assert:
      that:
        - "slurm_munge_key != ''"

  - name: Install munge
    package:
      name: munge
      state: installed

  - name: Write the munge key
    copy:
      content: "{{ slurm_munge_key }}"
      dest: /etc/munge/munge.key
      owner: munge
      mode: 0400

  - name: Start and enable munge
    service:
      name: munge.service
      state: started
      enabled: True


  # Get Slurm installed and configured
  - name: Add a slurm repository
    yum_repository:
      name: slurm
      description: "Slurm package repository"
      file: slurm
      baseurl: "{{ slurm_repo_url }}"
      gpgkey: "{{ slurm_repo_gpgurl }}"
      gpgcheck: "{{ slurm_repo_gpgurl != '' }}"

  - name: Install Slurm
    package:
      name: "{{ item }}"
      state: installed
    loop:
      - slurm
      - slurm-perlapi
      - slurm-torque

  - name: Make the Slurm Directories
    file:
      path: "{{ item.path }}"
      state: directory
      owner: "{{ item.owner }}"
    loop:
      - { path: "/etc/slurm", owner: root }
      - { path: "/etc/slurm/plugins", owner: root }
      - { path: "/var/spool/slurm", owner: slurm }
      - { path: "/var/spool/slurm/state", owner: slurm }
      - { path: "/var/spool/slurm/spool", owner: slurm }

  - name: Render the Slurm Configs
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    loop:
      - { src: slurm.conf.j2, dest: /etc/slurm/slurm.conf }
      - { src: cgroup.conf.j2, dest: /etc/slurm/cgroup.conf }
      - { src: cgroup_allowed_devices_file.conf.j2, dest: 
            /etc/slurm/cgroup_allowed_devices_file.conf }
    notify:
      - Restart slurmd
      - Restart slurmctld
      - Restart slurmdbd
  
  # Install, start, and enable relevant services depending on role
  - when: slurm_run_slurmd
    block:
    - name: Install slurmd
      package:
        name: "{{ item }}"
        state: installed
      loop:
        - slurmd
        - slurm-pam_slurm

    - name: Start and enable slurmd
      service:
        name: slurmd.service
        state: started
        enabled: True

    - name: Open the slurmd port
      firewalld:
        port: "7003/tcp"
        state: enabled
        permanent: True
        immediate: True
      failed_when: False


  - when: slurm_run_slurmctld
    block:
    - name: Install slurmctld
      package:
        name: slurm-slurmctld
        state: installed

    - name: Start and enable slurmctld
      service:
        name: slurmctld.service
        state: started
        enabled: True

    - name: Open the slurmctld port
      firewalld:
        port: "7002/tcp"
        state: enabled
        permanent: True
        immediate: True


  - when: slurm_run_slurmdbd
    block:
    - name: Ensure the database password is set
      assert:
        that:
          - "slurm_slurmdbd_dbpassword != ''"

    - name: Install slurmdbd
      package:
        name: slurm-slurmdbd
        state: installed
    
    - name: Render the Slurmdbd Config
      template:
        src: slurmdbd.conf.j2
        dest: /etc/slurm/slurmdbd.conf
      notify: Restart slurmdbd

    - name: Start and enable slurmdbd
      service:
        name: slurmdbd.service
        state: started
        enabled: True

    - name: Open the slurmdbd port
      firewalld:
        port: "6819/tcp"
        state: enabled
        permanent: True
        immediate: True


